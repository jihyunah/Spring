<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<bean id="messageBeanImpl" class="sample01.MessageBeanImpl">
		<property name="str" value="Have a nice day!!" />
</bean>

<bean id="loggingAdvice" class="sample01.LoggingAdvice"/>

<!-- AOP -->
<aop:config>
	<aop:pointcut expression="execution(public void sample01.MessageBeanImpl.*Before())"  
				  id="beforeMethod"/> <!-- 이 이름의 함수가 실행될 때  -->
	<aop:pointcut expression="execution(public * *.*.*After())"  
				  id="afterMethod"/> <!-- 아이디를 지정해줌. , 이 이름의 함수가 실행될 때  -->	
	<aop:pointcut expression="execution(public * *.MessageBeanImpl.*Print(..))"  
				  id="aroundMethod"/>		  
	
	<aop:aspect ref="loggingAdvice"> <!-- 공통관심사항 클래스 어디냐  -->
		<aop:before method="beforeTrace" pointcut-ref="beforeMethod"/>
		<aop:after method="afterTrace" pointcut-ref="afterMethod"/>
		<aop:around method="trace" pointcut-ref="aroundMethod"/>
	</aop:aspect> 

</aop:config>

</beans>
